syntax = "proto3";

// Set the C# namespace for the generated classes
option csharp_namespace = "GrpcService1";

import "google/protobuf/empty.proto";


// Door descriptor
message Door {
    int32 door_id = 1;                // Unique ID for the door
    int32 amount_of_students = 2;     // Number of students generated by the door
    bool is_closed = 3;               // Indicates if the door is closed
    bool is_opened = 4;               // Indicates if the door is opened
    string name = 5;                  // Optional description of the door
}

// Teacher descriptor
message Teacher {
    int32 teacher_id = 1;             // Unique ID for the teacher
    bool has_voted_to_start = 2;      // Whether the teacher voted to start the class
    bool has_voted_to_end = 3;        // Whether the teacher voted to end the class
    string name = 4;                  // Name of the teacher
}

// Response for unique ID generation
message UniqueIdResponse {
    int32 unique_id = 1;              // The generated unique ID
}

// Response for voting outcome
message VoteResponse {
    bool is_success = 1;              // Indicates if the vote was successful
}

// Request for generating students (sent by door)
message StudentGenerationRequest {
    Door door = 1;                    // Door description with student information
}

// Response to check if there are enough students
message StudentCheckResponse {
    bool enough_students = 1;         // Indicates if there are enough students to start class
}

// Response for class session state
message ClassSessionStateResponse {
    bool is_in_session = 1;           // Indicates if the class is currently in session
}

// Service for Classroom management
service Classroom {
    // Get the next unique ID from the server
    rpc GetUniqueId(google.protobuf.Empty) returns (UniqueIdResponse);

    // Send the number of generated students to the server (from door)
    rpc GeneratedNumberOfStudents(StudentGenerationRequest) returns (google.protobuf.Empty);

    // Check if there are enough students to start the class
    rpc EnoughStudents(google.protobuf.Empty) returns (StudentCheckResponse);

    // Get the current classroom session state (whether the class is in session)
    rpc IsClassInSession(google.protobuf.Empty) returns (ClassSessionStateResponse);

    // Vote to start the class
    rpc VoteStartClass(Teacher) returns (VoteResponse);

    // Vote to end the class
    rpc VoteEndClass(Teacher) returns (VoteResponse);
}
